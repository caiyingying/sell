<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.daoliuhe.sell.mapper.UserRoleMapper" >
  <resultMap id="BaseResultMap" type="com.daoliuhe.sell.model.UserRole" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="USER_ID" property="userId" jdbcType="INTEGER" />
    <result column="ROLE_ID" property="roleId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, USER_ID, ROLE_ID
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_user_role
    where ID = #{id,jdbcType=INTEGER}
  </select>

  <select id="select" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from sys_user_role
    <where>
      <if test="id != null and id != ''">
        and ID = #{id,jdbcType=INTEGER}
      </if>
      <if test="userId != null and userId != ''">
        and USER_ID = #{userId,jdbcType=INTEGER}
      </if>
      <if test="roleId != null and roleId != ''">
        and ROLE_ID = #{roleId,jdbcType=INTEGER}
      </if>
    </where>
  </select>

  <sql id="queryRoleData">
    select r.id, r.name, r.description, r.enabled
    from sys_user_role ur
    left join sys_user u
    on ur.user_id = u.id
    left join sys_role r
    on ur.role_id = r.id
    where u.id = #{userId,jdbcType=VARCHAR}
    order by ur.id desc
  </sql>

  <select id="getRolePageCount" resultType="int" parameterType="UserRole">
    select count(*) count from (
    <include refid="queryRoleData" />
    ) t
  </select>

  <select id="getRolePageData" resultType="Role" parameterType="UserRole">
    select * from (
    <include refid="queryRoleData" />
    ) t limit #{beginIndex},#{rows}
  </select>

  <select id="getRolesByLoginName" resultType="Role" parameterType="String">
    select r.id, r.name, r.description, r.enabled
    from  sys_user_role ur
    left join sys_user u
    on ur.user_id = u.id
    left join sys_role r
    on ur.role_id = r.id
    where u.LOGIN_NAME = #{loginName,jdbcType=VARCHAR}
    and r.enabled = 1
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_user_role
    where ID = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteRelationForUser">
    delete from sys_user_role
    where USER_ID = #{userId,jdbcType=INTEGER} and ROLE_ID in
    <foreach item="item" index="index" collection="roleIds" open="(" separator="," close=")">
      #{item}
    </foreach>
  </delete>

  <insert id="insert" parameterType="com.daoliuhe.sell.model.UserRole" >
    insert into sys_user_role (ID, USER_ID, ROLE_ID
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.daoliuhe.sell.model.UserRole" >
    insert into sys_user_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="roleId != null" >
        ROLE_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.daoliuhe.sell.model.UserRole" >
    update sys_user_role
    <set >
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null" >
        ROLE_ID = #{roleId,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.daoliuhe.sell.model.UserRole" >
    update sys_user_role
    set USER_ID = #{userId,jdbcType=INTEGER},
      ROLE_ID = #{roleId,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>