<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/util 
           http://www.springframework.org/schema/util/spring-util.xsd">
	
	<!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="loginUrl" value="/login"/>
    </bean>
    
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<!-- Shiro的核心安全接口，这个属性是必须的 -->  
	    <property name="securityManager" ref="securityManager"/>
	    <!-- 要求登录时的链接(登录页面地址)，非必须的属性，默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->  
	    <property name="loginUrl" value="/login"/>
	    <!-- 登录成功后要跳转的连接(属性用不到，因为登录成功后的处理逻辑在Controller里硬编码) -->  
		<!-- <property name="successUrl" value="/index"/> -->
		<!-- 用户访问未对其授权的资源时，所显示的链接 -->  
	    <property name="unauthorizedUrl" value="/login/unauthorized"/>
	    <!-- The 'filters' property is not necessary since any declared javax.servlet.Filter model  -->
	    <!-- defined will be automatically acquired and available via its beanName in chain        -->
	    <!-- definitions, but you can perform instance overrides or name aliases here if you like: -->
        <property name="filters">
            <util:map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
            </util:map>
        </property>
	    <property name="filterChainDefinitions">
	        <value>
	            # some example chain definitions:
	            # /admin/** = authc, roles[admin]
	            # /docs/** = authc, perms[document:read]
	            # /** = authc
	            # more URL-to-FilterChain definitions here
	            # anon：不需要身份验证, authc:需要身份验证, filter有先后顺序区别
	            /static/** = anon
	            /login/** = anon
	            /weChat/** = anon
				/favicon.ico = anon
	            /** = authc
	        </value>
	    </property>
	</bean>
	
	 <!-- 缓存管理器 使用Ehcache实现 -->
    <bean id="ehCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:ehcache.xml"/>
        <!--<property name="cacheManager" ref="defaultCacheManager"/>-->
    </bean>

	<!-- 会话ID生成器 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
	
	<!-- 会话DAO -->
    <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache"/>
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean>

	<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- session 有效时间为半小时 （毫秒单位）-->
		<property name="globalSessionTimeout" value="7200000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <!-- 
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
         -->
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
	</bean>
	
	<!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

	 <!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="7200000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

	<!-- 凭证匹配器 -->
	<bean id="credentialsMatcher" class="com.daoliuhe.sell.core.RetryLimitHashedCredentialsMatcher">
		<constructor-arg ref="ehCacheManager"/>
		<property name="hashAlgorithmName" value="md5"/>
		<property name="hashIterations" value="2"/>
		<property name="storedCredentialsHexEncoded" value="true"/>
	</bean>

	<!--DB 密码验证-->
	<bean id="shiroDbRealm" class="com.daoliuhe.sell.core.UserRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher"/>
		<property name="cachingEnabled" value="true"/>
	</bean>

	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
 	    <property name="realm" ref="shiroDbRealm"/>
	    <property name="sessionManager" ref="sessionManager"/>
 	    <property name="cacheManager" ref="ehCacheManager"/>
	</bean>
	
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>
	<!-- Enable Shiro Annotations for Spring-configured beans.  Only run after -->
	<!-- the lifecycleBeanProcessor has run: -->
	<!-- 如@RequiresRoles，@RequiresPermissions -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
	<bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
	    <property name="securityManager" ref="securityManager"/>
	</bean>
	
</beans>